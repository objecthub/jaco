|/(_|)|(       modular, object-oriented programming|\( |\| )      (c) 2001 by Matthias Zenger=======================================================================######## 001:module M {	interface I {		void foo();	}	class A implements I with {		int x = 0;		public void bar(A a) {			System.out.println("bar");			a.foo();			a.bar(null);  <== error produced too late		}		public void foo() {			System.out.println("foo");		}	}}######## 002:module M {	interface I {		void foo();	}	class A implements I with {		void foo() {     <== error (public missing) produced too late			System.out.println("foo");		}	}}######## 003:sealed classes should not be redefined in extended modules;the following code crashes at runtime due to B not implemen-ting M2.A.module M {	interface I {	    I();		void foo();	}	sealed class A implements I with {		public void bar(A a) {			System.out.println("A.bar");		}		public void foo() {			System.out.println("A.foo");			this.bar(this);		}	}}module M2 extends M {	sealed class A implements I with {		public void foo() {			System.out.println("new A.foo");		}	}}module N {	module M;		class B extends M.A {		public void bar(M.A a) {			System.out.println("B.a");		}		public void foo() {			System.out.println("B.foo");			super.foo();		}	}		void main(String[] args) {		new B().foo();	}}module N2 extends N {	module M2;}######## 004:Nested modules in module interfaces are not checkedmodule interface M {	module N;}module interface N {}module M2 implements M {}  <== error appears too late=======================================================================