module interface M {	interface I {		I();		void foo();	}	sealed class A implements I;}module W implements M {	class C implements I {		public void foo() {					}	}	sealed class A implements I with C;	void foo(A a) { }}module X extends W {	interface J { }	class D implements I, J {		public void foo() {					}	}	sealed class A implements I with D;	void foo(A a) { }}module Z requires M {    class B extends M.A {    	B() {    		super();    	}    }}